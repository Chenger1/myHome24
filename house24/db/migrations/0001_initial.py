# Generated by Django 3.2.3 on 2021-06-19 14:04

import db.models.house
import db.models.user
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=150, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='about/')),
                ('seo_title', models.CharField(blank=True, max_length=150, null=True)),
                ('seo_description', models.TextField(blank=True, null=True)),
                ('seo_keywords', models.CharField(blank=True, max_length=150, null=True)),
                ('additional_title', models.CharField(blank=True, max_length=100, null=True)),
                ('additional_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContactsPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('full_name', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='Неправильный формат номера.', regex='^\\+\\d{8,15}$')])),
                ('email', models.EmailField(blank=True, max_length=150, null=True)),
                ('link', models.CharField(blank=True, max_length=100, null=True)),
                ('map', models.TextField(blank=True, null=True)),
                ('seo_title', models.CharField(blank=True, max_length=150, null=True)),
                ('seo_description', models.TextField(blank=True, null=True)),
                ('seo_keywords', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Credentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('information', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomAbstractUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('phone_number', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Неправильный формат номера.', regex='^\\+\\d{8,15}$')])),
                ('birthday', models.DateField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(0, 'Активен'), (1, 'Новый'), (2, 'Отключен')], default=0)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Flat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('square', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('image1', models.ImageField(blank=True, null=True, upload_to=db.models.house.get_dir_name)),
                ('image2', models.ImageField(blank=True, null=True, upload_to=db.models.house.get_dir_name)),
                ('image3', models.ImageField(blank=True, null=True, upload_to=db.models.house.get_dir_name)),
                ('image4', models.ImageField(blank=True, null=True, upload_to=db.models.house.get_dir_name)),
                ('image5', models.ImageField(blank=True, null=True, upload_to=db.models.house.get_dir_name)),
            ],
        ),
        migrations.CreateModel(
            name='MainPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slide1', models.ImageField(upload_to='main_page/')),
                ('slide2', models.ImageField(upload_to='main_page/')),
                ('slide3', models.ImageField(upload_to='main_page/')),
                ('title', models.CharField(blank=True, max_length=150, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('show_link', models.BooleanField(default=1)),
                ('seo_title', models.CharField(blank=True, max_length=150, null=True)),
                ('seo_description', models.TextField(blank=True, null=True)),
                ('seo_keywords', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Measure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.IntegerField(choices=[(0, 'Приход'), (1, 'Расход')])),
            ],
        ),
        migrations.CreateModel(
            name='PaymentTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('status', models.IntegerField(choices=[(0, 'Оплачена'), (1, 'Частично оплачена'), (2, 'Неоплачена')], default=2)),
                ('is_done', models.BooleanField(default=0)),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('sum', models.FloatField()),
                ('created', models.DateField()),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='db.flat')),
                ('floor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='db.floor')),
                ('house', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='db.house')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('statistic', models.BooleanField(default=1)),
                ('account_transaction', models.BooleanField(default=1)),
                ('ticket', models.BooleanField(default=1)),
                ('personal_account', models.BooleanField(default=1)),
                ('flats', models.BooleanField(default=1)),
                ('owners', models.BooleanField(default=1)),
                ('houses', models.BooleanField(default=1)),
                ('messages', models.BooleanField(default=1)),
                ('master_request', models.BooleanField(default=1)),
                ('meters', models.BooleanField(default=1)),
                ('site_control', models.BooleanField(default=1)),
                ('services', models.BooleanField(default=1)),
                ('tariffs', models.BooleanField(default=1)),
                ('roles', models.BooleanField(default=1)),
                ('users', models.BooleanField(default=1)),
                ('credentials', models.BooleanField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.BooleanField(default=1)),
                ('measure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='services', to='db.measure')),
            ],
        ),
        migrations.CreateModel(
            name='ServicesPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seo_title', models.CharField(blank=True, max_length=150, null=True)),
                ('seo_description', models.TextField(blank=True, null=True)),
                ('seo_keywords', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('updated', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TicketTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('file', models.FileField(upload_to='file_templates/')),
                ('is_default', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('customabstractuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='db.customabstractuser')),
                ('photo', models.ImageField(blank=True, null=True, upload_to=db.models.user.get_dir_name)),
                ('patronym', models.CharField(blank=True, max_length=100, null=True)),
                ('viber', models.CharField(blank=True, max_length=100, null=True)),
                ('telegram', models.CharField(blank=True, max_length=100, null=True)),
                ('about', models.TextField(blank=True, null=True)),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_roles', to='db.role')),
            ],
            options={
                'abstract': False,
            },
            bases=('db.customabstractuser',),
        ),
        migrations.CreateModel(
            name='TariffService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
                ('currency', models.CharField(default='грн.', max_length=30)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tariffs', to='db.service')),
                ('tariff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='db.tariff')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='services_page/')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='db.servicespage')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='db.house')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('status', models.IntegerField(choices=[(0, 'Активен'), (1, 'Неактивен')], default=0)),
                ('flat', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account', to='db.flat')),
                ('floor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='db.floor')),
                ('house', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='db.house')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='db.section')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentTicketService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outcome', models.FloatField()),
                ('unit_price', models.FloatField()),
                ('cost', models.FloatField()),
                ('payment_ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='db.paymentticket')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_tickets_service', to='db.service')),
            ],
        ),
        migrations.AddField(
            model_name='paymentticket',
            name='personal_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='db.personalaccount'),
        ),
        migrations.AddField(
            model_name='paymentticket',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='db.section'),
        ),
        migrations.AddField(
            model_name='paymentticket',
            name='tariff',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='db.tariff'),
        ),
        migrations.CreateModel(
            name='Meter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('date', models.DateField()),
                ('status', models.IntegerField(choices=[(0, 'Новое'), (1, 'Учтено'), (2, 'Учтено и оплачен'), (3, 'Нулевое')], default=0)),
                ('data', models.IntegerField()),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meters', to='db.flat')),
                ('floor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meters', to='db.floor')),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meters', to='db.house')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meters', to='db.section')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meters', to='db.service')),
            ],
        ),
        migrations.CreateModel(
            name='InfoBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='main_page/block/')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='db.mainpage')),
            ],
        ),
        migrations.AddField(
            model_name='floor',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='floors', to='db.section'),
        ),
        migrations.AddField(
            model_name='flat',
            name='floor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flats', to='db.floor'),
        ),
        migrations.AddField(
            model_name='flat',
            name='house',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flats', to='db.house'),
        ),
        migrations.AddField(
            model_name='flat',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flats', to='db.section'),
        ),
        migrations.AddField(
            model_name='flat',
            name='tariff',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flats', to='db.tariff'),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('file', models.FileField(upload_to='about/documents/')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='db.aboutpage')),
            ],
        ),
        migrations.CreateModel(
            name='AdditionalGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='about/additional/')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_images', to='db.aboutpage')),
            ],
        ),
        migrations.CreateModel(
            name='AboutGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='about/gallery/')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='db.aboutpage')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('created', models.DateField()),
                ('paid_sum', models.FloatField()),
                ('status', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('payment_item_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to='db.paymentitem')),
                ('payment_ticket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='db.paymentticket')),
                ('personal_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to='db.personalaccount')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='master', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owner_transfer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('text', models.TextField(blank=True, null=True)),
                ('with_debt', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('flat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='db.flat')),
                ('floor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='db.floor')),
                ('house', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='db.house')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='db.section')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MasterRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('description', models.TextField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('type', models.IntegerField(choices=[(0, 'Любой специалист'), (1, 'Сантехник'), (2, 'Электрик'), (3, 'Слесарь')], default=0)),
                ('status', models.IntegerField(choices=[(0, 'Новое'), (1, 'В работе'), (2, 'Выполнено')], default=0)),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='db.flat')),
                ('master', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='master_requests', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owner_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InviteMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=100)),
                ('text', models.CharField(max_length=150)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HouseUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='db.house')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='houses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='flat',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flats', to=settings.AUTH_USER_MODEL),
        ),
    ]
